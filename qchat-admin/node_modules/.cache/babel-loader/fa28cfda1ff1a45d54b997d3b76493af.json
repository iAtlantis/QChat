{"remainingRequest":"/Users/harakuro/Desktop/QChat-netty/qchat-admin/node_modules/babel-loader/lib/index.js!/Users/harakuro/Desktop/QChat-netty/qchat-admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/harakuro/Desktop/QChat-netty/qchat-admin/src/utils/request.js","dependencies":[{"path":"/Users/harakuro/Desktop/QChat-netty/qchat-admin/src/utils/request.js","mtime":1620983545868},{"path":"/Users/harakuro/Desktop/QChat-netty/qchat-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/harakuro/Desktop/QChat-netty/qchat-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/harakuro/Desktop/QChat-netty/qchat-admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsgLy8gaW1wb3J0IHsgTWVzc2FnZUJveCwgTWVzc2FnZSB9IGZyb20gJ2VsZW1lbnQtdWknCi8vIGltcG9ydCBzdG9yZSBmcm9tICdAL3N0b3JlJwovLyBpbXBvcnQgeyBnZXRUb2tlbiB9IGZyb20gJ0AvdXRpbHMvYXV0aCcKLy8gY3JlYXRlIGFuIGF4aW9zIGluc3RhbmNlCgp2YXIgc2VydmljZSA9IGF4aW9zLmNyZWF0ZSh7CiAgYmFzZVVSTDogJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MCcsCiAgLy8gdXJsID0gYmFzZSB1cmwgKyByZXF1ZXN0IHVybAogIC8vIHdpdGhDcmVkZW50aWFsczogdHJ1ZSwgLy8gc2VuZCBjb29raWVzIHdoZW4gY3Jvc3MtZG9tYWluIHJlcXVlc3RzCiAgdGltZW91dDogNTAwMCAvLyByZXF1ZXN0IHRpbWVvdXQKCn0pOyAvLyAvLyByZXF1ZXN0IGludGVyY2VwdG9yCi8vIHNlcnZpY2UuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKAovLyAgIGNvbmZpZyA9PiB7Ci8vICAgICAvLyBkbyBzb21ldGhpbmcgYmVmb3JlIHJlcXVlc3QgaXMgc2VudAovLyAgICAgaWYgKHN0b3JlLmdldHRlcnMudG9rZW4pIHsKLy8gICAgICAgLy8gbGV0IGVhY2ggcmVxdWVzdCBjYXJyeSB0b2tlbgovLyAgICAgICAvLyBbJ1gtVG9rZW4nXSBpcyBhIGN1c3RvbSBoZWFkZXJzIGtleQovLyAgICAgICAvLyBwbGVhc2UgbW9kaWZ5IGl0IGFjY29yZGluZyB0byB0aGUgYWN0dWFsIHNpdHVhdGlvbgovLyAgICAgICBjb25maWcuaGVhZGVyc1snWC1Ub2tlbiddID0gZ2V0VG9rZW4oKQovLyAgICAgfQovLyAgICAgcmV0dXJuIGNvbmZpZwovLyAgIH0sCi8vICAgZXJyb3IgPT4gewovLyAgICAgLy8gZG8gc29tZXRoaW5nIHdpdGggcmVxdWVzdCBlcnJvcgovLyAgICAgY29uc29sZS5sb2coZXJyb3IpIC8vIGZvciBkZWJ1ZwovLyAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKQovLyAgIH0KLy8gKQovLyAvLyByZXNwb25zZSBpbnRlcmNlcHRvcgovLyBzZXJ2aWNlLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoCi8vICAgLyoqCi8vICAgICogSWYgeW91IHdhbnQgdG8gZ2V0IGh0dHAgaW5mb3JtYXRpb24gc3VjaCBhcyBoZWFkZXJzIG9yIHN0YXR1cwovLyAgICAqIFBsZWFzZSByZXR1cm4gIHJlc3BvbnNlID0+IHJlc3BvbnNlCi8vICAgKi8KLy8gICAvKioKLy8gICAgKiBEZXRlcm1pbmUgdGhlIHJlcXVlc3Qgc3RhdHVzIGJ5IGN1c3RvbSBjb2RlCi8vICAgICogSGVyZSBpcyBqdXN0IGFuIGV4YW1wbGUKLy8gICAgKiBZb3UgY2FuIGFsc28ganVkZ2UgdGhlIHN0YXR1cyBieSBIVFRQIFN0YXR1cyBDb2RlCi8vICAgICovCi8vICAgcmVzcG9uc2UgPT4gewovLyAgICAgY29uc3QgcmVzID0gcmVzcG9uc2UuZGF0YQovLyAgICAgLy8gaWYgdGhlIGN1c3RvbSBjb2RlIGlzIG5vdCAyMDAwMCwgaXQgaXMganVkZ2VkIGFzIGFuIGVycm9yLgovLyAgICAgaWYgKHJlcy5jb2RlICE9PSAyMDAwMCkgewovLyAgICAgICBNZXNzYWdlKHsKLy8gICAgICAgICBtZXNzYWdlOiByZXMubWVzc2FnZSB8fCAnRXJyb3InLAovLyAgICAgICAgIHR5cGU6ICdlcnJvcicsCi8vICAgICAgICAgZHVyYXRpb246IDUgKiAxMDAwCi8vICAgICAgIH0pCi8vICAgICAgIC8vIDUwMDA4OiBJbGxlZ2FsIHRva2VuOyA1MDAxMjogT3RoZXIgY2xpZW50cyBsb2dnZWQgaW47IDUwMDE0OiBUb2tlbiBleHBpcmVkOwovLyAgICAgICBpZiAocmVzLmNvZGUgPT09IDUwMDA4IHx8IHJlcy5jb2RlID09PSA1MDAxMiB8fCByZXMuY29kZSA9PT0gNTAwMTQpIHsKLy8gICAgICAgICAvLyB0byByZS1sb2dpbgovLyAgICAgICAgIE1lc3NhZ2VCb3guY29uZmlybSgnWW91IGhhdmUgYmVlbiBsb2dnZWQgb3V0LCB5b3UgY2FuIGNhbmNlbCB0byBzdGF5IG9uIHRoaXMgcGFnZSwgb3IgbG9nIGluIGFnYWluJywgJ0NvbmZpcm0gbG9nb3V0JywgewovLyAgICAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICdSZS1Mb2dpbicsCi8vICAgICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAnQ2FuY2VsJywKLy8gICAgICAgICAgIHR5cGU6ICd3YXJuaW5nJwovLyAgICAgICAgIH0pLnRoZW4oKCkgPT4gewovLyAgICAgICAgICAgc3RvcmUuZGlzcGF0Y2goJ3VzZXIvcmVzZXRUb2tlbicpLnRoZW4oKCkgPT4gewovLyAgICAgICAgICAgICBsb2NhdGlvbi5yZWxvYWQoKQovLyAgICAgICAgICAgfSkKLy8gICAgICAgICB9KQovLyAgICAgICB9Ci8vICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgRXJyb3IocmVzLm1lc3NhZ2UgfHwgJ0Vycm9yJykpCi8vICAgICB9IGVsc2UgewovLyAgICAgICByZXR1cm4gcmVzCi8vICAgICB9Ci8vICAgfSwKLy8gICBlcnJvciA9PiB7Ci8vICAgICBjb25zb2xlLmxvZygnZXJyJyArIGVycm9yKSAvLyBmb3IgZGVidWcKLy8gICAgIE1lc3NhZ2UoewovLyAgICAgICBtZXNzYWdlOiBlcnJvci5tZXNzYWdlLAovLyAgICAgICB0eXBlOiAnZXJyb3InLAovLyAgICAgICBkdXJhdGlvbjogNSAqIDEwMDAKLy8gICAgIH0pCi8vICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpCi8vICAgfQovLyApCgpleHBvcnQgZGVmYXVsdCBzZXJ2aWNlOw=="},{"version":3,"sources":["/Users/harakuro/Desktop/QChat-netty/qchat-admin/src/utils/request.js"],"names":["axios","service","create","baseURL","timeout"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;AAEA;;AACA,IAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EAAE,uBADkB;AACO;AAClC;AACAC,EAAAA,OAAO,EAAE,IAHkB,CAGb;;AAHa,CAAb,CAAhB,C,CAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeH,OAAf","sourcesContent":["import axios from 'axios'\n// import { MessageBox, Message } from 'element-ui'\n// import store from '@/store'\n// import { getToken } from '@/utils/auth'\n\n// create an axios instance\nconst service = axios.create({\n  baseURL: 'http://localhost:8080', // url = base url + request url\n  // withCredentials: true, // send cookies when cross-domain requests\n  timeout: 5000 // request timeout\n})\n\n// // request interceptor\n// service.interceptors.request.use(\n//   config => {\n//     // do something before request is sent\n\n//     if (store.getters.token) {\n//       // let each request carry token\n//       // ['X-Token'] is a custom headers key\n//       // please modify it according to the actual situation\n//       config.headers['X-Token'] = getToken()\n//     }\n//     return config\n//   },\n//   error => {\n//     // do something with request error\n//     console.log(error) // for debug\n//     return Promise.reject(error)\n//   }\n// )\n\n// // response interceptor\n// service.interceptors.response.use(\n//   /**\n//    * If you want to get http information such as headers or status\n//    * Please return  response => response\n//   */\n\n//   /**\n//    * Determine the request status by custom code\n//    * Here is just an example\n//    * You can also judge the status by HTTP Status Code\n//    */\n//   response => {\n//     const res = response.data\n\n//     // if the custom code is not 20000, it is judged as an error.\n//     if (res.code !== 20000) {\n//       Message({\n//         message: res.message || 'Error',\n//         type: 'error',\n//         duration: 5 * 1000\n//       })\n\n//       // 50008: Illegal token; 50012: Other clients logged in; 50014: Token expired;\n//       if (res.code === 50008 || res.code === 50012 || res.code === 50014) {\n//         // to re-login\n//         MessageBox.confirm('You have been logged out, you can cancel to stay on this page, or log in again', 'Confirm logout', {\n//           confirmButtonText: 'Re-Login',\n//           cancelButtonText: 'Cancel',\n//           type: 'warning'\n//         }).then(() => {\n//           store.dispatch('user/resetToken').then(() => {\n//             location.reload()\n//           })\n//         })\n//       }\n//       return Promise.reject(new Error(res.message || 'Error'))\n//     } else {\n//       return res\n//     }\n//   },\n//   error => {\n//     console.log('err' + error) // for debug\n//     Message({\n//       message: error.message,\n//       type: 'error',\n//       duration: 5 * 1000\n//     })\n//     return Promise.reject(error)\n//   }\n// )\n\nexport default service\n"]}]}